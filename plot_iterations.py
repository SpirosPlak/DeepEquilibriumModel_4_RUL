import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import os

# Get the directory of the currently running script
script_dir = os.path.dirname(os.path.abspath(__file__))
# Change the working directory to the script's directory
os.chdir(script_dir)

siter1 = np.array([43.189655172413794, 45.56896551724138, 51.37931034482759, 42.275862068965516, 36.53448275862069, 38.758620689655174, 44.793103448275865, 48.8448275862069, 53.1551724137931, 54.810344827586206, 62.98275862068966, 54.08620689655172, 66.39655172413794, 60.41379310344828, 61.706896551724135, 57.55172413793103, 62.36206896551724, 56.724137931034484, 52.775862068965516, 55.206896551724135, 59.8448275862069, 63.310344827586206, 65.43103448275862, 67.98275862068965, 68.96551724137932, 65.53448275862068, 67.25862068965517, 68.58620689655173, 73.13793103448276, 72.05172413793103, 74.27586206896552, 81.89655172413794, 81.0, 111.51724137931035, 105.63793103448276])
siter2 = np.array([11.476190476190476, 12.782312925170068, 15.693877551020408, 21.98639455782313, 26.60544217687075, 7.394557823129252, 8.16326530612245, 8.17687074829932, 13.10204081632653, 12.156462585034014, 12.0, 11.768707482993197, 11.421768707482993, 11.231292517006803, 11.204081632653061, 11.34013605442177, 11.29251700680272, 11.19047619047619, 11.285714285714286, 11.462585034013605, 11.523809523809524, 11.299319727891156, 11.17687074829932, 11.122448979591837, 11.040816326530612, 11.034013605442176, 11.040816326530612, 11.013605442176871, 11.013605442176871, 11.0, 11.0, 11.0, 11.006802721088436, 11.0, 11.006802721088436])
siter3 = np.array([25.1, 49.34285714285714, 37.72857142857143, 30.4, 29.1, 29.771428571428572, 30.97142857142857, 30.1, 29.042857142857144, 30.8, 33.042857142857144, 35.457142857142856, 37.05714285714286, 40.8, 42.2, 42.44285714285714, 42.285714285714285, 44.44285714285714, 45.52857142857143, 42.48571428571429, 43.65714285714286, 47.41428571428571, 47.042857142857144, 49.8, 50.114285714285714, 49.857142857142854, 50.44285714285714, 51.128571428571426, 54.042857142857144, 53.457142857142856, 55.628571428571426, 55.58571428571429, 55.34285714285714, 57.957142857142856, 57.22857142857143])
siter4 = np.array([12.439306358381502, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.104046242774567, 10.861271676300579, 11.208092485549132, 11.601156069364162, 11.641618497109826, 11.901734104046243, 12.433526011560694, 13.213872832369942, 13.491329479768787, 14.0, 14.023121387283236, 14.815028901734104, 14.803468208092486, 15.54335260115607, 15.647398843930636, 15.92485549132948, 17.15028901734104, 13.780346820809248, 14.93063583815029, 14.826589595375722, 15.040462427745664, 15.109826589595375, 15.791907514450868])

siter = [siter1, siter2, siter3, siter4]


# Create the plot
plt.figure(figsize=(10, 6))  # Set figure size for better visualization

# Plot each series with distinct line styles and markers
for i in range(len(siter)):
    plt.plot(
        range(len(siter[i])),
        siter[i],
        label=f'Dataset FD00{i+1}',
        linestyle='-',  # Solid lines
        marker='o',     # Circular markers
        markersize=5    # Marker size
    )

# Add labels, grid, and legend
plt.title('Convergence Iterations vs Epochs', fontsize=14, fontweight='bold')
plt.ylabel('Convergence Iterations', fontsize=12)
plt.xlabel('Epochs', fontsize=12)
plt.grid(True, linestyle='--', alpha=0.6)  # Dashed grid with some transparency
plt.legend(fontsize=10, loc='upper left')  # Adjust legend font size and location

# Set axis limits for better viewing
plt.ylim(0, max(max(s) for s in siter) + 10)  # Extend Y-axis slightly beyond max value
plt.xlim(0, len(siter[0]) - 1)               # Set X-axis to match epoch range

# Show the plot
plt.tight_layout()  # Adjust layout to prevent overlapping elements
# Save or display the plot
plt.savefig(f'figures\\Ploting_Iterations_Per_Epoch.png', dpi=300, bbox_inches="tight")
plt.show()